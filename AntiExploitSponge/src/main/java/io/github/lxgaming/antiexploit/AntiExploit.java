/*
 * Copyright 2017 Alex Thomson
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.github.lxgaming.antiexploit;

import java.nio.file.Path;

import org.slf4j.Logger;
import org.spongepowered.api.config.DefaultConfig;
import org.spongepowered.api.event.Listener;
import org.spongepowered.api.event.game.state.GameInitializationEvent;
import org.spongepowered.api.event.game.state.GameStoppingEvent;
import org.spongepowered.api.plugin.Plugin;

import com.google.inject.Inject;

import io.github.lxgaming.antiexploit.configuration.Configuration;
import io.github.lxgaming.antiexploit.entries.Config;
import io.github.lxgaming.antiexploit.entries.ExploitData;
import io.github.lxgaming.antiexploit.mysql.MySQL;
import io.github.lxgaming.antiexploit.util.Reference;

@Plugin(
	id = Reference.PLUGIN_ID,
	name = Reference.PLUGIN_NAME,
	version = Reference.VERSION,
	description = "Prevents Exploits",
	authors = {"LX_Gaming"},
	url = "https://lxgaming.github.io/"
)
public class AntiExploit {
	
	private static AntiExploit instance;
	
	@Inject
	private Logger logger;
	
	@Inject
	@DefaultConfig(sharedRoot = true)
	private Path path;
	
	private Configuration configuration;
	private MySQL mysql;
	
	public AntiExploit() {
		instance = this;
	}
	
	@Listener
	public void onGameInit(GameInitializationEvent event) {
		configuration = new Configuration();
		mysql = new MySQL();
		getConfiguration().loadConfiguration();
		getConfiguration().saveConfiguration();
		
		getConfig().getExploits().put("fly", new ExploitData());
		getConfig().getExploits().put("speed", new ExploitData());
		
		getConfiguration().saveConfiguration();
		
		getLogger().info(Reference.PLUGIN_NAME + " v" + Reference.VERSION + " Has loaded.");
	}
	
	@Listener
	public void onGameStopping(GameStoppingEvent event) {
		getLogger().info(Reference.PLUGIN_NAME + " v" + Reference.VERSION + " Has stopped.");
	}
	
	public void debugMessage(String message) {
		if (getConfig() != null && getConfig().isDebug()) {
			getLogger().info(message);
		} else {
			getLogger().debug(message);
		}
	}
	
	public static AntiExploit getInstance() {
		return instance;
	}
	
	public Logger getLogger() {
		return logger;
	}
	
	public Path getPath() {
		return path;
	}
	
	public Configuration getConfiguration() {
		return configuration;
	}
	
	public Config getConfig() {
		return getConfiguration().getConfig();
	}
	
	public MySQL getMySQL() {
		return mysql;
	}
}