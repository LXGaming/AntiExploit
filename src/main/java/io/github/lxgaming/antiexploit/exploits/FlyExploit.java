package io.github.lxgaming.antiexploit.exploits;

import java.util.HashMap;

import org.bukkit.GameMode;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.potion.PotionEffectType;

import io.github.lxgaming.antiexploit.AntiExploit;

public class FlyExploit {
	
	private Location locationStore;
	private int heightStore = 0;
	private int triggerCount = 0;
	
	public void process(Player player) {
		if (AntiExploit.config.getBoolean("AntiExploit.Exploits.Fly.Prevent") != true) {
			return;
		}
		
		if (player.getAllowFlight()) {
			return;
		}
		
		if (player.getGameMode().equals(GameMode.CREATIVE) || player.getGameMode().equals(GameMode.SPECTATOR)) {
			return;
		}
		
		if (player.hasPotionEffect(PotionEffectType.JUMP) || player.hasPotionEffect(PotionEffectType.LEVITATION)) {
			return;
		}
		checkLocation(player, player.getLocation().subtract(0, 1, 0), 1);
	}
	
	private void checkLocation(Player player, Location location, int radius) {
		if (!location.getBlock().getType().equals(Material.AIR)) {
			locationStore = null;
			return;
		}
		
		for (int x = location.getBlockX() - radius; x <= location.getBlockX() + radius; x++) {
			for (int z = location.getBlockZ() - radius; z <= location.getBlockZ() + radius; z++) {
				if (!location.getWorld().getBlockAt(x, location.getBlockY(), z).getType().equals(Material.AIR)) {
					locationStore = null;
					return;
				}
			}
		}
		
		int height = 0;
		for (int y = location.getBlockY(); y >= 0; y--) {
			if (!location.getWorld().getBlockAt(location.getBlockX(), y, location.getBlockZ()).equals(Material.AIR)) {
				height = location.getBlockY() - y;
			}
		}
		
		if (locationStore == null) {
			locationStore = location;
			heightStore = height;
			return;
		}
		
		if (heightStore == height) {
			
		}
		
		
		if (location.getBlockY() < locationStore.getBlockY()) {
			
		}
		
		
		//Check that the Y Veloicy is staying the same.
		//Check entity locations
		
	}
}