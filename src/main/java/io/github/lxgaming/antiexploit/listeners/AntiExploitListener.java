package io.github.lxgaming.antiexploit.listeners;

import org.bukkit.Location;
import org.bukkit.block.Block;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.scheduler.BukkitRunnable;

import io.github.lxgaming.antiexploit.AntiExploit;
import io.github.lxgaming.antiexploit.exploits.FlyExploit;
import io.github.lxgaming.antiexploit.exploits.LeavesXRayExploit;
import io.github.lxgaming.antiexploit.exploits.SpeedExploit;
import io.github.lxgaming.antiexploit.util.ExploitManager;

public class AntiExploitListener implements Listener {
	
	@EventHandler
	public void onPlayerJoin(PlayerJoinEvent event) {
		new BukkitRunnable() {
			private final Player player = (Player) event.getPlayer();
			private final FlyExploit fly = new FlyExploit();
			private final LeavesXRayExploit leavesXRay = new LeavesXRayExploit();
			private final SpeedExploit speed = new SpeedExploit();
			
			@Override
			public void run() {
				checkPlayer();
				process();
			}
			
			private void checkPlayer() {
				if (player == null) {
					cancel(null, "Player is null.");
				}
				
				if (!player.isOnline() || !player.isValid()) {
					cancel(player.getName(), "Player is offline or not longer valid.");
				}
				
				if (player.hasPermission("AntiExploit.Bypass")) {
					//cancel(player.getName(), "Player had Bypass permission.");
				}
			}
			
			private void process() {
				
				//Location location = player.getLocation();
				//Block block = location.add(0, -1, 0).getBlock();
				
				//AntiExploit.instance.getLogger().info(player.getName() + " - " + block.getType().toString());
				
				//fly.process(player);
				leavesXRay.process(player);
				speed.process(player);
			}
			
			private void cancel(String playerName, String message) {
				ExploitManager.debugMessage("Thread '" + playerName + "' Cancelled - '" + message + "'");
				cancel();
			}
		}.runTaskTimer(AntiExploit.instance, 20L, 100L);
		return;
	}
}